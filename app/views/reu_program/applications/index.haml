.container
  .row
    .col
      %h2.float-left Applicants
  .d-flex.justify-content-end
    :ruby
      base_label = "Export #{params[:state]&.capitalize.presence || 'All'}#{" Searched for" if params[:search]} as"
      export_csv_label = "#{base_label} CSV"
      export_pdf_label = "#{base_label} PDF"
    .btn-group
      - if current_user.notch8?
        = link_to 'NUKE THEM ALL', nuke_them_all_reu_program_applications_path, class: 'btn btn-outline-danger', data: { confirm: 'this cannot be undone, are you sure?' }
        = link_to 'Show Discarded Applications', reu_program_applications_path(show_deleted: true, state: params[:state], search: params[:search]), class: 'btn btn-outline-primary'
      %button.btn.btn-outline-secondary(data-target="#csvModal" data-toggle="modal" type="button")= export_csv_label
      = link_to export_pdf_label, reu_program_applications_path(format: 'pdf', state: params[:state], search: params[:search]), class: 'btn btn-outline-secondary'
  .row.mt-3
    .col
      .btn-group.mb-3.d-flex.flex-wrap
        = link_to 'All', reu_program_applications_path, class: "btn btn-outline-secondary #{'active' if params[:state].blank?}"
        - Application.states.each do |state|
          - s = state.first
          = link_to s.capitalize, reu_program_applications_path(state: s), class: "btn btn-outline-#{status_class(s)} #{'active' if s == params[:state]}"
  .row.mb-3
    .col-6
    .col-6
      = form_tag reu_program_applications_path, method: 'get' do
        = hidden_field_tag :state, params[:state]
        .input-group
          - message = "Search #{"#{params[:state].capitalize} " if params[:state].present?}Applicants"
          = text_field_tag :search, params[:search], class: 'form-control', 'aria-describedby': "search-submit", placeholder: message
          .input-group-append
            %button.btn.btn-outline-info(type="submit") Search
            = link_to 'Clear', reu_program_applications_path, class: 'btn btn-outline-secondary'
  .row
    .col
      %table.table
        %thead
          %tr
            %th Name
            %th Email
            %th State
            %th.text-right Actions
        %tbody
          - @applications.each do |application|
            %tr
              %td= application.full_name
              %td= application.email
              %td= application.state
              %td.actions
                .w-100.d-flex.justify-content-end
                  .btn-group
                    = link_to 'Show', reu_program_application_path(application), class: 'btn btn-outline-secondary btn-sm'
                    = link_to 'PDF', reu_program_application_path(application, format: 'pdf'), class: 'btn btn-outline-secondary btn-sm'
                    %button.btn.btn-outline-secondary.btn-sm(data-target="#csvModal-#{application.id}" data-toggle="modal" type="button") CSV
                    - if application.kept?
                      = link_to 'Remove', reu_program_application_path(application), method: :delete, data: { confirm: 'Are you sure you want to remove this application?'}, class: 'btn btn-outline-danger btn-sm'
                    - else
                      = link_to 'Restore', restore_reu_program_application_path(application), class: 'btn btn-outline-info btn-sm'
  .row
    .col
      = paginate @applications
  .row
    .col
      %center
        = "#{@application_count} #{"Application".pluralize(@application_count)} #{params[:state].capitalize if params[:state]}"

= render partial: 'csv_modal', locals: { modalId: 'csvModal', url: index_csv_reu_program_applications_path(format: 'csv', state: params[:state], search: params[:search]) }

- @applications.each do |application|
  = render partial: 'csv_modal', locals: { modalId: "csvModal-#{application.id}", url: show_csv_reu_program_application_path(application, format: 'csv') }
