.row
  .col
    %h1 Status
  .col.d-flex.justify-content-end.align-items-baseline
    .btn-group
      = link_to 'Submit', submit_path, class: 'btn btn-outline-info' if current_application.can_submit?
      = link_to 'Withdraw', withdraw_path, class: 'btn btn-outline-warning' if current_application.can_withdraw?
      = link_to 'Restart', restart_path, class: 'btn btn-outline-success' if current_application.can_restart?

.card.bg-light.mb-3
  .card-header Current Status: #{current_application.state.titlecase}
  .card-body
    - case current_application.state
    - when 'started'
      %p Please complete all required fields and fill out #{current_application.current_recommender_form.recommenders_count} recommenders to be able to submit your application for consideration.
    - when 'submitted'
      %p You have submitted your application. Your application will be completed when your recommenders have sent in their information.
    - when 'completed'
      %p Your Application is complete. We will be reviewing your application.
    - when 'withdrawn'
      %p You have withdrawn your application. If you want your applcation to be considered please restart your account and complete your application.
    - when 'accepted'
      %p Congradulations you have been accepted. Please look for more communication from us about the details of the program.
    - when 'rejected'
      %p We are sorry but you have not been accepted into the program.


%h3 Recommenders
.d-flex.flex-wrap
  - info = current_application.recommender_info.fetch('recommenders_form', {})
  - if info.empty?
    .alert.alert-warning.w-100
      %p Please fill out the information for your recommenders #{link_to 'here', recommenders_path}.
  - else
    - info.each_with_index do |r, index|
      .card.mb-2.mr-2
        .card-body
          - r.each do |key, value|
            - path = "recommenders_form--#{index}--#{key}"
            %p.mb-0(data-obj-path="#{path}")
              %strong #{key}:
              = format_value(value, 'recommender', current_application.id, path)
          - status = current_application.recommender_statuses.find_by_email(r['email'])
          - if status.submitted_at.present?
            .alert.alert-success.width-200
              %p Recommender submitted a recommendation.
          - elsif status.last_sent_at.present? && (status.last_sent_at + 1.day) > Time.current
            .alert.alert-info.width-200
              %p
                Notification email sent to recommender
                %br
                at #{status.last_sent_at.strftime('%d/%m/%Y %H:%M')}.
                %br
                You can only notify a recommender
                %br
                once every 24 hours.
          - else
            = link_to 'Resend email', recommenders_resend_path(status.id), class: 'btn btn-info btn-sm'

%h3 Application Information
- if current_application.data&.empty?
  .alert.alert-warning.w-100
    %p Please fill out the information for your application #{link_to 'here', application_path}.
- else
  - current_application.data.each do |key1, value1|
    .card.mb-2
      .card-body
        %h5.card-title= key1.capitalize
        - case value1
        - when Array
          - value1.each_with_index do |item, index|
            - item.each do |k, v|
              - path = "#{key1}--#{index}--#{k}"
              %p.mb-0(data-obj-path="#{path}")
                %strong #{k}:
                = format_value(v, 'application', current_application.id, path)
            %hr

        - when Hash
          - value1.each do |k, v|
            - path = "#{key1}--#{k}"
            %p.mb-0(data-obj-path="#{path}")
              %strong #{k}:
              = format_value(v, 'application', current_application.id, path)
