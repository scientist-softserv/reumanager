stages:
- build
- test
- deploy

before_script:
- export TAG=${CI_COMMIT_SHORT_SHA}
- export REGISTRY_HOST=${CI_REGISTRY}
- export REGISTRY_URI="/${CI_PROJECT_PATH}"

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - sc build
    - sc push
  tags:
    - local

test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  services:
        - name: postgres:11.1
  variables:
    DATABASE_ADAPTER: postgresql
    DATABASE_HOST: postgres
    DATABASE_NAME: reumanager
    DATABASE_PASSWORD: password
    DATABASE_USER: postgres
    GIT_STRATEGY: none
    POSTGRES_DB: reumanager
    POSTGRES_HOST: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_USER: postgres
    SITE_URI_BASE: TODO
    TEST_DB: reumanager
  script:
    - ls -l
    - cd /app && rails db:create db:schema:load
    - cd /app && rspec
  tags:
    - docker

staging:
  stage: deploy
  script:
    - "keybase status | grep 'Logged in:     no' && keybase oneshot"
    - ./chart/bin/decrypt staging
    - ./chart/bin/deploy staging $CI_COMMIT_SHORT_SHA
  after_script:
    - rm -f ./chart/*-values.yaml
    - keybase logout
  when: manual
  tags:
    - local

production:
  stage: deploy

  script:
    - export KUBECONFIG=$KUBECONFIG_PALS
    - "keybase status | grep 'Logged in:     no' && keybase oneshot"
    - ./chart/bin/decrypt production
    - ./chart/bin/deploy production $CI_COMMIT_SHORT_SHA
  after_script:
    - rm -f ./chart/*-values.yaml
    - keybase logout
  when: manual
  tags:
    - local
